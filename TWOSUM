Describe:Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

Example:
Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].


public class Solution {
	public int[] twoSum(int[] numbers, int target) {
	    Map<Integer, Integer> map = new HashMap<Integer, Integer>();
		for (int i = 0; i < numbers.length; i++) {
		    if (map.containsKey(numbers[i])) {
		        return new int[]{map.get(numbers[i]), i };
		    } else {
		        map.put(target - numbers[i], i);
		    }
		}
		return new int[]{0, 0};
	}
}

Python
class Solution(object):
    def twoSum(self, nums, target):
        if len(nums) <= 1:
            return False
        buff_dict = {}
        for i in range(len(nums)):
            if nums[i] in buff_dict:
                return [buff_dict[nums[i]], i]
            else:
                buff_dict[target - nums[i]] = i
